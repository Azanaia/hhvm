error: Typing[4110] Invalid return type

File intersection_subtyping_l.php, line 9, character 10 - line 9, character 11:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;
 9 |   return »$c«;
10 | }

Expected C

File intersection_subtyping_l.php, line 7, character 32 - line 7, character 32:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): »C« {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

But got (A & I)

File intersection_subtyping_l.php, line 7, character 18 - line 7, character 24:

 5 | class C extends A {}
 6 | 
 7 | function inter_l(»(A & I)« $ai): C {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

Here's why:


  Step 1 of 1                                 (here is where the error occurred) 

I started by checking this subtype relationship.

The subtype comes from this hint

File intersection_subtyping_l.php, line 7, character 18 - line 7, character 24:

 5 | class C extends A {}
 6 | 
 7 | function inter_l(»(A & I)« $ai): C {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

and flows into this expression

File intersection_subtyping_l.php, line 7, character 26 - line 7, character 28:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) »$ai«): C {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

as the parameter hint

which itself flows into this expression

File intersection_subtyping_l.php, line 8, character 8 - line 8, character 10:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = »$ai«;
 9 |   return $c;
10 | }

as the type of the local variable

which itself flows into this expression

File intersection_subtyping_l.php, line 8, character 3 - line 8, character 4:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   »$c« = $ai;
 9 |   return $c;
10 | }

via an assignment

which itself flows into this expression

File intersection_subtyping_l.php, line 9, character 10 - line 9, character 11:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;
 9 |   return »$c«;
10 | }

as the type of the local variable

which itself flows into this expression

File intersection_subtyping_l.php, line 9, character 3 - line 9, character 12:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;
 9 |   »return $c;«
10 | }

because it is used in a return position

The supertype comes from this hint

File intersection_subtyping_l.php, line 7, character 32 - line 7, character 32:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): »C« {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

which is defined here

File intersection_subtyping_l.php, line 5, character 7 - line 5, character 7:

 3 | interface I {}
 4 | class A {}
 5 | class »C« extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;

error: Typing[4110] Invalid return type

File intersection_subtyping_l.php, line 9, character 10 - line 9, character 11:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;
 9 |   return »$c«;
10 | }

Expected C

File intersection_subtyping_l.php, line 7, character 32 - line 7, character 32:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): »C« {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

But got A

File intersection_subtyping_l.php, line 7, character 19 - line 7, character 19:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((»A« & I) $ai): C {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

Here's why:


  Step 1 of 2                                                                   

I started by checking this subtype relationship.

The subtype comes from this hint

File intersection_subtyping_l.php, line 7, character 18 - line 7, character 24:

 5 | class C extends A {}
 6 | 
 7 | function inter_l(»(A & I)« $ai): C {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

and flows into this expression

File intersection_subtyping_l.php, line 7, character 26 - line 7, character 28:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) »$ai«): C {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

as the parameter hint

which itself flows into this expression

File intersection_subtyping_l.php, line 8, character 8 - line 8, character 10:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = »$ai«;
 9 |   return $c;
10 | }

as the type of the local variable

which itself flows into this expression

File intersection_subtyping_l.php, line 8, character 3 - line 8, character 4:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   »$c« = $ai;
 9 |   return $c;
10 | }

via an assignment

which itself flows into this expression

File intersection_subtyping_l.php, line 9, character 10 - line 9, character 11:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;
 9 |   return »$c«;
10 | }

as the type of the local variable

which itself flows into this expression

File intersection_subtyping_l.php, line 9, character 3 - line 9, character 12:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;
 9 |   »return $c;«
10 | }

because it is used in a return position

The supertype comes from this hint

File intersection_subtyping_l.php, line 7, character 32 - line 7, character 32:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): »C« {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

which is defined here

File intersection_subtyping_l.php, line 5, character 7 - line 5, character 7:

 3 | interface I {}
 4 | class A {}
 5 | class »C« extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;


  Step 2 of 2                                 (here is where the error occurred) 

The subtype is an intersection type so next I checked that the subtype constraint is satisfied for at least one of its element.

The subtype comes from this hint

File intersection_subtyping_l.php, line 7, character 19 - line 7, character 19:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((»A« & I) $ai): C {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

which is defined here

File intersection_subtyping_l.php, line 4, character 7 - line 4, character 7:

 3 | interface I {}
 4 | class »A« {}
 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;

The supertype is the same as before.

File intersection_subtyping_l.php, line 7, character 32 - line 7, character 32:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): »C« {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

error: Typing[4110] Invalid return type

File intersection_subtyping_l.php, line 9, character 10 - line 9, character 11:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;
 9 |   return »$c«;
10 | }

Expected C

File intersection_subtyping_l.php, line 7, character 32 - line 7, character 32:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): »C« {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

But got I

File intersection_subtyping_l.php, line 7, character 23 - line 7, character 23:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & »I«) $ai): C {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

Here's why:


  Step 1 of 2                                                                   

I started by checking this subtype relationship.

The subtype comes from this hint

File intersection_subtyping_l.php, line 7, character 18 - line 7, character 24:

 5 | class C extends A {}
 6 | 
 7 | function inter_l(»(A & I)« $ai): C {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

and flows into this expression

File intersection_subtyping_l.php, line 7, character 26 - line 7, character 28:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) »$ai«): C {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

as the parameter hint

which itself flows into this expression

File intersection_subtyping_l.php, line 8, character 8 - line 8, character 10:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = »$ai«;
 9 |   return $c;
10 | }

as the type of the local variable

which itself flows into this expression

File intersection_subtyping_l.php, line 8, character 3 - line 8, character 4:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   »$c« = $ai;
 9 |   return $c;
10 | }

via an assignment

which itself flows into this expression

File intersection_subtyping_l.php, line 9, character 10 - line 9, character 11:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;
 9 |   return »$c«;
10 | }

as the type of the local variable

which itself flows into this expression

File intersection_subtyping_l.php, line 9, character 3 - line 9, character 12:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;
 9 |   »return $c;«
10 | }

because it is used in a return position

The supertype comes from this hint

File intersection_subtyping_l.php, line 7, character 32 - line 7, character 32:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): »C« {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

which is defined here

File intersection_subtyping_l.php, line 5, character 7 - line 5, character 7:

 1 | <?hh
 2 | 
 3 | interface I {}
 4 | class A {}
 5 | class »C« extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;


  Step 2 of 2                                 (here is where the error occurred) 

The subtype is an intersection type so next I checked that the subtype constraint is satisfied for at least one of its element.

The subtype comes from this hint

File intersection_subtyping_l.php, line 7, character 23 - line 7, character 23:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & »I«) $ai): C {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

which is defined here

File intersection_subtyping_l.php, line 3, character 11 - line 3, character 11:

 1 | <?hh
 2 | 
 3 | interface »I« {}
 4 | class A {}
 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): C {
 8 |   $c = $ai;

The supertype is the same as before.

File intersection_subtyping_l.php, line 7, character 32 - line 7, character 32:

 5 | class C extends A {}
 6 | 
 7 | function inter_l((A & I) $ai): »C« {
 8 |   $c = $ai;
 9 |   return $c;
10 | }

3 errors found
