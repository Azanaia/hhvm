error: Typing[4110] Invalid argument

 14 | function bar(SuperBox $f): void {
 15 |   $g = $f->get();
 16 |   foo(»$g«);
 17 | }

File "assign_obj_get.php", line 16, character 7 - line 16, character 8:

Expected `Sub`

 12 | function foo(»Sub« $_): void {}
 13 |
 14 | function bar(SuperBox $f): void {

File "assign_obj_get.php", line 12, character 14 - line 12, character 16:

But got `Super`

 3 | class Super {}
 4 | class Sub extends Super {}
 5 | class SuperBox {
 6 |   public function __construct(private Super $item) {}
 7 |   public function get(): »Super« {
 8 |     return $this->item;
 9 |   }

File "assign_obj_get.php", line 7, character 26 - line 7, character 30:

Step 1 of 2

I started by checking this subtype relationship.

The subtype comes from this function or method declaration

 12 | function »foo«(Sub $_): void {}
 13 |
 14 | function bar(SuperBox $f): void {

File "assign_obj_get.php", line 12, character 10 - line 12, character 12:

The supertype comes from this expression

 14 | function bar(SuperBox $f): void {
 15 |   $g = $f->get();
 16 |   »foo($g)«;
 17 | }

File "assign_obj_get.php", line 16, character 3 - line 16, character 9:

Step 2 of 2

These are function types so next I checked the 1st function parameter of the supertype and subtype were subtypes (functions are contravariant in their parameters so the direction of the subtype relationship is reversed).

This step is the cause of the error.

The subtype comes from this hint

 3 | class Super {}
 4 | class Sub extends Super {}
 5 | class SuperBox {
 6 |   public function __construct(private Super $item) {}
 7 |   public function get(): »Super« {
 8 |     return $this->item;
 9 |   }

File "assign_obj_get.php", line 7, character 26 - line 7, character 30:

which is defined here

 3 | class »Super« {}
 4 | class Sub extends Super {}
 5 | class SuperBox {

File "assign_obj_get.php", line 3, character 7 - line 3, character 11:

and flows into this expression because of a function call

 14 | function bar(SuperBox $f): void {
 15 |   $g = »$f->get()«;
 16 |   foo($g);
 17 | }

File "assign_obj_get.php", line 15, character 8 - line 15, character 16:

which itself flows into this expression via an assignment

 14 | function bar(SuperBox $f): void {
 15 |   »$g« = $f->get();
 16 |   foo($g);
 17 | }

File "assign_obj_get.php", line 15, character 3 - line 15, character 4:

which itself flows into this expression as the type of the local variable

 14 | function bar(SuperBox $f): void {
 15 |   $g = $f->get();
 16 |   foo(»$g«);
 17 | }

File "assign_obj_get.php", line 16, character 7 - line 16, character 8:

The supertype comes from this hint

 12 | function foo(»Sub« $_): void {}
 13 |
 14 | function bar(SuperBox $f): void {

File "assign_obj_get.php", line 12, character 14 - line 12, character 16:

which is defined here

 3 | class Super {}
 4 | class »Sub« extends Super {}
 5 | class SuperBox {
 6 |   public function __construct(private Super $item) {}
 7 |   public function get(): Super {
 8 |     return $this->item;
 9 |   }

File "assign_obj_get.php", line 4, character 7 - line 4, character 9:

1 error found.
