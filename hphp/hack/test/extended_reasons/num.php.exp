error: Typing[4110] Invalid return type

File num.php, line 9, character 10 - line 9, character 15:

 7 |   $x = 5 + $x;
 8 |   $x = 5 + $x;
 9 |   return »5 + $x«;
10 | }

Expected string

File num.php, line 3, character 23 - line 3, character 28:

 1 | <?hh
 2 | 
 3 | function foo(num $n): »string« {
 4 |   $x = 5 + $n;
 5 |   $x = 5 + $x;
 6 |   $x = $x + 5;

But got float because this is the result of an arithmetic operation with a num as the second argument, and no floats.

File num.php, line 9, character 10 - line 9, character 15:

 7 |   $x = 5 + $x;
 8 |   $x = 5 + $x;
 9 |   return »5 + $x«;
10 | }

Here is why I think the argument is a num: this is a num

File num.php, line 3, character 14 - line 3, character 16:

 1 | <?hh
 2 | 
 3 | function foo(»num« $n): string {
 4 |   $x = 5 + $n;
 5 |   $x = 5 + $x;
 6 |   $x = $x + 5;

Here's why:


  Step 1 of 2                                                                   

I started by checking this subtype relationship.

The subtype comes from this arithmetic expression

File num.php, line 9, character 10 - line 9, character 15:

 7 |   $x = 5 + $x;
 8 |   $x = 5 + $x;
 9 |   return »5 + $x«;
10 | }

and flows into this expression

File num.php, line 9, character 3 - line 9, character 16:

 7 |   $x = 5 + $x;
 8 |   $x = 5 + $x;
 9 |   »return 5 + $x;«
10 | }

because it is used in a return position

The supertype comes from this hint

File num.php, line 3, character 23 - line 3, character 28:

 1 | <?hh
 2 | 
 3 | function foo(num $n): »string« {
 4 |   $x = 5 + $n;
 5 |   $x = 5 + $x;
 6 |   $x = $x + 5;


  Step 2 of 2                                 (here is where the error occurred) 

The subtype is a num type so next I checked the subtype constraint is satisfied for both the int and float parts.

The subtype comes from this arithmetic expression

File num.php, line 9, character 10 - line 9, character 15:

 7 |   $x = 5 + $x;
 8 |   $x = 5 + $x;
 9 |   return »5 + $x«;
10 | }

and flows into this expression

File num.php, line 9, character 3 - line 9, character 16:

 7 |   $x = 5 + $x;
 8 |   $x = 5 + $x;
 9 |   »return 5 + $x;«
10 | }

because it is used in a return position

The supertype is the same as before.

File num.php, line 3, character 23 - line 3, character 28:

 1 | <?hh
 2 | 
 3 | function foo(num $n): »string« {
 4 |   $x = 5 + $n;
 5 |   $x = 5 + $x;
 6 |   $x = $x + 5;

error: Typing[4110] Invalid return type

File num.php, line 9, character 10 - line 9, character 15:

 7 |   $x = 5 + $x;
 8 |   $x = 5 + $x;
 9 |   return »5 + $x«;
10 | }

Expected string

File num.php, line 3, character 23 - line 3, character 28:

 1 | <?hh
 2 | 
 3 | function foo(num $n): »string« {
 4 |   $x = 5 + $n;
 5 |   $x = 5 + $x;
 6 |   $x = $x + 5;

But got int because this is the result of an arithmetic operation with a num as the second argument, and no floats.

File num.php, line 9, character 10 - line 9, character 15:

 7 |   $x = 5 + $x;
 8 |   $x = 5 + $x;
 9 |   return »5 + $x«;
10 | }

Here is why I think the argument is a num: this is a num

File num.php, line 3, character 14 - line 3, character 16:

 1 | <?hh
 2 | 
 3 | function foo(»num« $n): string {
 4 |   $x = 5 + $n;
 5 |   $x = 5 + $x;
 6 |   $x = $x + 5;

Here's why:


  Step 1 of 2                                                                   

I started by checking this subtype relationship.

The subtype comes from this arithmetic expression

File num.php, line 9, character 10 - line 9, character 15:

 7 |   $x = 5 + $x;
 8 |   $x = 5 + $x;
 9 |   return »5 + $x«;
10 | }

and flows into this expression

File num.php, line 9, character 3 - line 9, character 16:

 7 |   $x = 5 + $x;
 8 |   $x = 5 + $x;
 9 |   »return 5 + $x;«
10 | }

because it is used in a return position

The supertype comes from this hint

File num.php, line 3, character 23 - line 3, character 28:

 1 | <?hh
 2 | 
 3 | function foo(num $n): »string« {
 4 |   $x = 5 + $n;
 5 |   $x = 5 + $x;
 6 |   $x = $x + 5;


  Step 2 of 2                                 (here is where the error occurred) 

The subtype is a num type so next I checked the subtype constraint is satisfied for both the int and float parts.

The subtype comes from this arithmetic expression

File num.php, line 9, character 10 - line 9, character 15:

 7 |   $x = 5 + $x;
 8 |   $x = 5 + $x;
 9 |   return »5 + $x«;
10 | }

and flows into this expression

File num.php, line 9, character 3 - line 9, character 16:

 7 |   $x = 5 + $x;
 8 |   $x = 5 + $x;
 9 |   »return 5 + $x;«
10 | }

because it is used in a return position

The supertype is the same as before.

File num.php, line 3, character 23 - line 3, character 28:

 1 | <?hh
 2 | 
 3 | function foo(num $n): »string« {
 4 |   $x = 5 + $n;
 5 |   $x = 5 + $x;
 6 |   $x = $x + 5;

2 errors found
