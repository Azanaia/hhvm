error: Typing[4110] Invalid argument

File "class_subtyping_invariant.php", line 14, character 14 - line 14, character 15:

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_invariant(MyB<Super, Sub> $x): void {
 14 |   takes_my_a(»$x«);
 15 | }

Expected `Sub`

File "class_subtyping_invariant.php", line 13, character 43 - line 13, character 45:

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_invariant(MyB<Super, »Sub«> $x): void {
 14 |   takes_my_a($x);
 15 | }

But got `Super`

File "class_subtyping_invariant.php", line 11, character 37 - line 11, character 41:

 11 | function takes_my_a(MyA<Sub, Super, »Super«> $_): void {}
 12 | 
 13 | function subtype_bad_invariant(MyB<Super, Sub> $x): void {
 14 |   takes_my_a($x);
 15 | }

Step 1 of 4

I started by checking this subtype relationship.

The subtype comes from this function or method declaration

File "class_subtyping_invariant.php", line 11, character 10 - line 11, character 19:

 11 | function »takes_my_a«(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_invariant(MyB<Super, Sub> $x): void {
 14 |   takes_my_a($x);
 15 | }

The supertype comes from this expression

File "class_subtyping_invariant.php", line 14, character 3 - line 14, character 16:

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_invariant(MyB<Super, Sub> $x): void {
 14 |   »takes_my_a($x)«;
 15 | }

Step 2 of 4

These are function types so next I checked the 1st function parameter of the supertype and subtype were subtypes (functions are contravariant in their parameters so the direction of the subtype relationship is reversed).

The subtype comes from this hint

File "class_subtyping_invariant.php", line 13, character 32 - line 13, character 46:

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_invariant(»MyB<Super, Sub>« $x): void {
 14 |   takes_my_a($x);
 15 | }

which is defined here

File "class_subtyping_invariant.php", line 5, character 7 - line 5, character 9:

 3 | class MyA<+Tco, -Tcontra, Tinv> {}
 4 | 
 5 | class »MyB«<-T1, T2> extends MyA<Sub, T1, T2> {}
 6 | 
 7 | class Super {}

and flows into this expression as the parameter hint

File "class_subtyping_invariant.php", line 13, character 48 - line 13, character 49:

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_invariant(MyB<Super, Sub> »$x«): void {
 14 |   takes_my_a($x);
 15 | }

which itself flows into this expression as the type of the local variable

File "class_subtyping_invariant.php", line 14, character 14 - line 14, character 15:

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_invariant(MyB<Super, Sub> $x): void {
 14 |   takes_my_a(»$x«);
 15 | }

The supertype comes from this hint

File "class_subtyping_invariant.php", line 11, character 21 - line 11, character 42:

 11 | function takes_my_a(»MyA<Sub, Super, Super>« $_): void {}
 12 | 
 13 | function subtype_bad_invariant(MyB<Super, Sub> $x): void {
 14 |   takes_my_a($x);
 15 | }

which is defined here

File "class_subtyping_invariant.php", line 3, character 7 - line 3, character 9:

 3 | class »MyA«<+Tco, -Tcontra, Tinv> {}
 4 | 
 5 | class MyB<-T1, T2> extends MyA<Sub, T1, T2> {}
 6 | 
 7 | class Super {}

Step 3 of 4

The subtype extends or implements a class or interface so next I checked that was a subtype of the supertype.

The subtype comes from this hint

File "class_subtyping_invariant.php", line 5, character 28 - line 5, character 43:

 3 | class MyA<+Tco, -Tcontra, Tinv> {}
 4 | 
 5 | class MyB<-T1, T2> extends »MyA<Sub, T1, T2>« {}
 6 | 
 7 | class Super {}

The supertype is the same as before.

File "class_subtyping_invariant.php", line 11, character 21 - line 11, character 42:

 11 | function takes_my_a(»MyA<Sub, Super, Super>« $_): void {}
 12 | 
 13 | function subtype_bad_invariant(MyB<Super, Sub> $x): void {
 14 |   takes_my_a($x);
 15 | }

Step 4 of 4

`\MyA` is a class or interface so next I checked the 3rd type arguments are subtypes. The type parameter is invariant so the subtype relationship must hold in both directions. Here I check the covariant case.

This step is the cause of the error.

The subtype comes from this hint

File "class_subtyping_invariant.php", line 11, character 37 - line 11, character 41:

 11 | function takes_my_a(MyA<Sub, Super, »Super«> $_): void {}
 12 | 
 13 | function subtype_bad_invariant(MyB<Super, Sub> $x): void {
 14 |   takes_my_a($x);
 15 | }

which is defined here

File "class_subtyping_invariant.php", line 7, character 7 - line 7, character 11:

 7 | class »Super« {}
 8 | 
 9 | class Sub extends Super {}
10 | 
11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}

The supertype comes from this hint

File "class_subtyping_invariant.php", line 13, character 43 - line 13, character 45:

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_invariant(MyB<Super, »Sub«> $x): void {
 14 |   takes_my_a($x);
 15 | }

which is defined here

File "class_subtyping_invariant.php", line 9, character 7 - line 9, character 9:

 7 | class Super {}
 8 | 
 9 | class »Sub« extends Super {}
10 | 
11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}

1 error found.
