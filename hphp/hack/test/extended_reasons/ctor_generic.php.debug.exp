error: Typing[4110] Invalid argument

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, string $b, ISender<int, null> $sender) {
 21 |     parent::__construct($a, $b, »$sender«);
 22 |   }
 23 | }

File "ctor_generic.php", line 21, character 33 - line 21, character 39:

Expected `null`

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, string $b, ISender<int, »null«> $sender) {
 21 |     parent::__construct($a, $b, $sender);
 22 |   }
 23 | }

File "ctor_generic.php", line 20, character 63 - line 20, character 66:

But got `string`

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, »string« $b, ISender<int, null> $sender) {
 21 |     parent::__construct($a, $b, $sender);
 22 |   }
 23 | }

File "ctor_generic.php", line 20, character 39 - line 20, character 44:

This error has 14 steps, a maximum depth of 3 and contains 2 reversals.

Here's why: this hint

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, »string« $b, ISender<int, null> $sender) {
 21 |     parent::__construct($a, $b, $sender);
 22 |   }
 23 | }

File "ctor_generic.php", line 20, character 39 - line 20, character 44:

flows into this expression because it is a parameter hint

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, string »$b«, ISender<int, null> $sender) {
 21 |     parent::__construct($a, $b, $sender);
 22 |   }
 23 | }

File "ctor_generic.php", line 20, character 46 - line 20, character 47:

which itself flows into this expression because the local variable has this type

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, string $b, ISender<int, null> $sender) {
 21 |     parent::__construct($a, »$b«, $sender);
 22 |   }
 23 | }

File "ctor_generic.php", line 21, character 29 - line 21, character 30:

which itself flows up into this expression as the 2nd function parameter

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, string $b, ISender<int, null> $sender) {
 21 |     »parent::__construct($a, $b, $sender)«;
 22 |   }
 23 | }

File "ctor_generic.php", line 21, character 5 - line 21, character 40:

which itself flows from this function or method  because they are required to be subtypes

 11 | abstract class TestServiceBase<TA, TB> {
 12 |   public function »__construct«(
 13 |     protected TA $a,
 14 |     protected TB $b,
 15 |     ISender<TA, ?TB> $sender,
 16 |   ) {}
 17 | }

File "ctor_generic.php", line 12, character 19 - line 12, character 29:

which itself flows down into the generic `TB` on `TestServiceBase` as the 2nd function parameter

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, string $b, ISender<int, null> $sender) {
 21 |     »parent::__construct($a, $b, $sender)«;
 22 |   }
 23 | }

File "ctor_generic.php", line 21, character 5 - line 21, character 40:

which itself flows up into this hint as the non-null part of a nullable type

 11 | abstract class TestServiceBase<TA, TB> {
 12 |   public function __construct(
 13 |     protected TA $a,
 14 |     protected TB $b,
 15 |     ISender<TA, »?TB«> $sender,
 16 |   ) {}
 17 | }

File "ctor_generic.php", line 15, character 17 - line 15, character 19:

which itself flows into this hint because of inference

 11 | abstract class TestServiceBase<TA, TB> {
 12 |   public function __construct(
 13 |     protected TA $a,
 14 |     protected TB $b,
 15 |     ISender<TA, »?TB«> $sender,
 16 |   ) {}
 17 | }

File "ctor_generic.php", line 15, character 17 - line 15, character 19:

which itself flows up into this hint as the covariant, 2nd type parameter of the this class `\ISender`

 11 | abstract class TestServiceBase<TA, TB> {
 12 |   public function __construct(
 13 |     protected TA $a,
 14 |     protected TB $b,
 15 |     »ISender<TA, ?TB>« $sender,
 16 |   ) {}
 17 | }

File "ctor_generic.php", line 15, character 5 - line 15, character 20:

which itself flows up into this function or method  as the 3rd function parameter

 11 | abstract class TestServiceBase<TA, TB> {
 12 |   public function »__construct«(
 13 |     protected TA $a,
 14 |     protected TB $b,
 15 |     ISender<TA, ?TB> $sender,
 16 |   ) {}
 17 | }

File "ctor_generic.php", line 12, character 19 - line 12, character 29:

which itself flows from this expression because they are required to be subtypes

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, string $b, ISender<int, null> $sender) {
 21 |     »parent::__construct($a, $b, $sender)«;
 22 |   }
 23 | }

File "ctor_generic.php", line 21, character 5 - line 21, character 40:

which itself flows down into this expression as the 3rd function parameter

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, string $b, ISender<int, null> $sender) {
 21 |     parent::__construct($a, $b, »$sender«);
 22 |   }
 23 | }

File "ctor_generic.php", line 21, character 33 - line 21, character 39:

which itself flows into this expression because the local variable has this type

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, string $b, ISender<int, null> »$sender«) {
 21 |     parent::__construct($a, $b, $sender);
 22 |   }
 23 | }

File "ctor_generic.php", line 20, character 69 - line 20, character 75:

which itself flows into this hint because it is a parameter hint

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, string $b, »ISender<int, null>« $sender) {
 21 |     parent::__construct($a, $b, $sender);
 22 |   }
 23 | }

File "ctor_generic.php", line 20, character 50 - line 20, character 67:

which itself flows down into this hint as the covariant, 2nd type parameter of the this class `\ISender`

 19 | final class TestServiceWA extends TestServiceBase<int, string> {
 20 |   public function __construct(int $a, string $b, ISender<int, »null«> $sender) {
 21 |     parent::__construct($a, $b, $sender);
 22 |   }
 23 | }

File "ctor_generic.php", line 20, character 63 - line 20, character 66:

Raw:
[
  {
    "Hint":[{"filename":"ctor_generic.php","line":20,"char_start":39,"char_end":44}]
  },
  "Flow_param_hint",
  {
    "Witness":[{"filename":"ctor_generic.php","line":20,"char_start":46,"char_end":47}]
  },
  "Flow_local",
  {
    "Witness":[{"filename":"ctor_generic.php","line":21,"char_start":29,"char_end":30}]
  },
  "Flow_prj",
  {
    "Prj":[
      {"Symm":[{"Prj_symm_fn_param":[1,1]}]},
      [
        {
          "Witness":[{"filename":"ctor_generic.php","line":21,"char_start":5,"char_end":40}]
        },
        "Flow_subtype",
        {
          "Rev":[
            [
              {
                "Support_dynamic_type":[{"filename":"ctor_generic.php","line":12,"char_start":19,"char_end":29}]
              }
            ]
          ]
        }
      ]
    ]
  },
  "Flow_subtype_toplevel",
  {
    "Type_variable_generics":[
      {"filename":"ctor_generic.php","line":21,"char_start":5,"char_end":40},
      "TB",
      "TestServiceBase"
    ]
  },
  "Flow_prj",
  {
    "Prj":[
      {"Asymm":["Sub","Prj_asymm_nullable"]},
      [
        {
          "Hint":[{"filename":"ctor_generic.php","line":15,"char_start":17,"char_end":19}]
        },
        "Flow_solved",
        {
          "Hint":[{"filename":"ctor_generic.php","line":15,"char_start":17,"char_end":19}]
        },
        "Flow_prj",
        {
          "Prj":[
            {"Symm":[{"Prj_symm_ctor":["Ctor_class","\\ISender",1,{"Dir":[{"Co":[]}]}]}]},
            [
              {
                "Def":[
                  {"filename":"ctor_generic.php","line":3,"char_start":11,"char_end":17},
                  [
                    {
                      "Hint":[{"filename":"ctor_generic.php","line":15,"char_start":5,"char_end":20}]
                    }
                  ]
                ]
              },
              "Flow_subtype",
              {
                "Rev":[
                  [
                    {
                      "Def":[
                        {"filename":"ctor_generic.php","line":3,"char_start":11,"char_end":17},
                        [
                          {
                            "Hint":[{"filename":"ctor_generic.php","line":20,"char_start":50,"char_end":67}]
                          }
                        ]
                      ]
                    },
                    "Flow_param_hint",
                    {
                      "Witness":[{"filename":"ctor_generic.php","line":20,"char_start":69,"char_end":75}]
                    },
                    "Flow_local",
                    {
                      "Witness":[{"filename":"ctor_generic.php","line":21,"char_start":33,"char_end":39}]
                    },
                    "Flow_prj",
                    {
                      "Prj":[
                        {"Symm":[{"Prj_symm_fn_param":[2,2]}]},
                        [
                          {
                            "Witness":[{"filename":"ctor_generic.php","line":21,"char_start":5,"char_end":40}]
                          },
                          "Flow_subtype",
                          {
                            "Rev":[
                              [
                                {
                                  "Support_dynamic_type":[{"filename":"ctor_generic.php","line":12,"char_start":19,"char_end":29}]
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        }
      ]
    ]
  },
  "Flow_transitive",
  {
    "Hint":[{"filename":"ctor_generic.php","line":20,"char_start":63,"char_end":66}]
  }
]


File "", line 0, character 0 - line 0, character -1:

Normalised:
[
  {
    "Hint":[{"filename":"ctor_generic.php","line":20,"char_start":39,"char_end":44}]
  },
  "Flow_param_hint",
  {
    "Witness":[{"filename":"ctor_generic.php","line":20,"char_start":46,"char_end":47}]
  },
  "Flow_local",
  {
    "Witness":[{"filename":"ctor_generic.php","line":21,"char_start":29,"char_end":30}]
  },
  "Flow_prj",
  {
    "Prj":[
      {"Symm":[{"Prj_symm_fn_param":[1,1]}]},
      [
        {
          "Witness":[{"filename":"ctor_generic.php","line":21,"char_start":5,"char_end":40}]
        },
        "Flow_subtype",
        {
          "Support_dynamic_type":[{"filename":"ctor_generic.php","line":12,"char_start":19,"char_end":29}]
        }
      ]
    ]
  },
  "Flow_subtype_toplevel",
  {
    "Type_variable_generics":[
      {"filename":"ctor_generic.php","line":21,"char_start":5,"char_end":40},
      "TB",
      "TestServiceBase"
    ]
  },
  "Flow_prj",
  {
    "Prj":[
      {"Asymm":["Sub","Prj_asymm_nullable"]},
      [
        {
          "Hint":[{"filename":"ctor_generic.php","line":15,"char_start":17,"char_end":19}]
        },
        "Flow_solved",
        {
          "Hint":[{"filename":"ctor_generic.php","line":15,"char_start":17,"char_end":19}]
        },
        "Flow_prj",
        {
          "Prj":[
            {"Symm":[{"Prj_symm_ctor":["Ctor_class","\\ISender",1,{"Dir":[{"Co":[]}]}]}]},
            [
              {
                "Def":[
                  {"filename":"ctor_generic.php","line":3,"char_start":11,"char_end":17},
                  [
                    {
                      "Hint":[{"filename":"ctor_generic.php","line":15,"char_start":5,"char_end":20}]
                    }
                  ]
                ]
              },
              "Flow_subtype",
              {
                "Prj":[
                  {"Symm":[{"Prj_symm_fn_param":[2,2]}]},
                  [
                    {
                      "Support_dynamic_type":[{"filename":"ctor_generic.php","line":12,"char_start":19,"char_end":29}]
                    },
                    "Flow_subtype",
                    {
                      "Witness":[{"filename":"ctor_generic.php","line":21,"char_start":5,"char_end":40}]
                    }
                  ]
                ]
              },
              "Flow_prj",
              {
                "Witness":[{"filename":"ctor_generic.php","line":21,"char_start":33,"char_end":39}]
              },
              "Flow_local",
              {
                "Witness":[{"filename":"ctor_generic.php","line":20,"char_start":69,"char_end":75}]
              },
              "Flow_param_hint",
              {
                "Def":[
                  {"filename":"ctor_generic.php","line":3,"char_start":11,"char_end":17},
                  [
                    {
                      "Hint":[{"filename":"ctor_generic.php","line":20,"char_start":50,"char_end":67}]
                    }
                  ]
                ]
              }
            ]
          ]
        }
      ]
    ]
  },
  "Flow_transitive",
  {
    "Hint":[{"filename":"ctor_generic.php","line":20,"char_start":63,"char_end":66}]
  }
]


File "", line 0, character 0 - line 0, character -1:

Path:
{
  "stats":{"max_depth":3,"length":14,"reversals":2},
  "path_elems":[
    [
      {
        "Hint":[{"filename":"ctor_generic.php","line":20,"char_start":39,"char_end":44}]
      }
    ],
    {"Edge":{"dir":"Fwd","kind":"Flow_param_hint"}},
    [
      {
        "Witness":[{"filename":"ctor_generic.php","line":20,"char_start":46,"char_end":47}]
      }
    ],
    {"Edge":{"dir":"Fwd","kind":"Flow_local"}},
    [
      {
        "Witness":[{"filename":"ctor_generic.php","line":21,"char_start":29,"char_end":30}]
      }
    ],
    {
      "Edge":{"dir":"Fwd","kind":"Flow_prj","in_to":{"Symm":[{"Prj_symm_fn_param":[1,1]}]}}
    },
    [
      {
        "Witness":[{"filename":"ctor_generic.php","line":21,"char_start":5,"char_end":40}]
      }
    ],
    {"Edge":{"dir":"Bwd","kind":"Flow_subtype"}},
    [
      {
        "Support_dynamic_type":[{"filename":"ctor_generic.php","line":12,"char_start":19,"char_end":29}]
      }
    ],
    {
      "Edge":{
        "dir":"Fwd",
        "kind":"Flow_subtype_toplevel",
        "out_of":{"Symm":[{"Prj_symm_fn_param":[1,1]}]}
      }
    },
    [
      {
        "Type_variable_generics":[
          {"filename":"ctor_generic.php","line":21,"char_start":5,"char_end":40},
          "TB",
          "TestServiceBase"
        ]
      }
    ],
    {
      "Edge":{"dir":"Fwd","kind":"Flow_prj","in_to":{"Asymm":["Sub","Prj_asymm_nullable"]}}
    },
    [
      {
        "Hint":[{"filename":"ctor_generic.php","line":15,"char_start":17,"char_end":19}]
      }
    ],
    {"Edge":{"dir":"Fwd","kind":"Flow_solved"}},
    [
      {
        "Hint":[{"filename":"ctor_generic.php","line":15,"char_start":17,"char_end":19}]
      }
    ],
    {
      "Edge":{
        "dir":"Fwd",
        "kind":"Flow_prj",
        "in_to":{"Symm":[{"Prj_symm_ctor":["Ctor_class","\\ISender",1,{"Dir":[{"Co":[]}]}]}]}
      }
    },
    [
      {
        "Def":[
          {"filename":"ctor_generic.php","line":3,"char_start":11,"char_end":17},
          [
            {
              "Hint":[{"filename":"ctor_generic.php","line":15,"char_start":5,"char_end":20}]
            }
          ]
        ]
      }
    ],
    {
      "Edge":{
        "dir":"Fwd",
        "kind":"Flow_subtype",
        "in_to":{"Symm":[{"Prj_symm_fn_param":[2,2]}]}
      }
    },
    [
      {
        "Support_dynamic_type":[{"filename":"ctor_generic.php","line":12,"char_start":19,"char_end":29}]
      }
    ],
    {"Edge":{"dir":"Bwd","kind":"Flow_subtype"}},
    [
      {
        "Witness":[{"filename":"ctor_generic.php","line":21,"char_start":5,"char_end":40}]
      }
    ],
    {
      "Edge":{"dir":"Fwd","kind":"Flow_prj","out_of":{"Symm":[{"Prj_symm_fn_param":[2,2]}]}}
    },
    [
      {
        "Witness":[{"filename":"ctor_generic.php","line":21,"char_start":33,"char_end":39}]
      }
    ],
    {"Edge":{"dir":"Fwd","kind":"Flow_local"}},
    [
      {
        "Witness":[{"filename":"ctor_generic.php","line":20,"char_start":69,"char_end":75}]
      }
    ],
    {"Edge":{"dir":"Fwd","kind":"Flow_param_hint"}},
    [
      {
        "Def":[
          {"filename":"ctor_generic.php","line":3,"char_start":11,"char_end":17},
          [
            {
              "Hint":[{"filename":"ctor_generic.php","line":20,"char_start":50,"char_end":67}]
            }
          ]
        ]
      }
    ],
    {
      "Edge":{
        "dir":"Fwd",
        "kind":"Flow_transitive",
        "out_of":{"Symm":[{"Prj_symm_ctor":["Ctor_class","\\ISender",1,{"Dir":[{"Co":[]}]}]}]}
      }
    },
    [
      {
        "Hint":[{"filename":"ctor_generic.php","line":20,"char_start":63,"char_end":66}]
      }
    ]
  ]
}


File "", line 0, character 0 - line 0, character -1:

1 error found.
