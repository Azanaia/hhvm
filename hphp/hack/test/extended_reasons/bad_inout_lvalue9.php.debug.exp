error: Parsing[1002] You cannot use this syntax with `inout`.

File "bad_inout_lvalue9.php", line 6, character 11 - line 6, character 23:

 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

error: Typing[4110] Invalid argument

File "bad_inout_lvalue9.php", line 6, character 5 - line 6, character 23:

 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(»inout tuple($x, $y)«);
 7 | }

Expected `vec<int>`

File "bad_inout_lvalue9.php", line 3, character 18 - line 3, character 28:

 3 | function f(inout »varray<int>« $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout tuple($x, $y));
 7 | }

But got `(int, int)`

File "bad_inout_lvalue9.php", line 6, character 11 - line 6, character 23:

 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

Derivation:
{
  "Derivation":[
    {
      "Begin":{
        "sub":[
          {
            "Support_dynamic_type":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":10,"char_end":10}]
          }
        ],
        "super":[
          {
            "Witness":[{"filename":"bad_inout_lvalue9.php","line":6,"char_start":3,"char_end":24}]
          }
        ]
      }
    },
    {
      "Step":{
        "rule":{"Using_prj":{"Prj_symm_fn_param":[0,0]}},
        "on_":"Both",
        "sub":[
          {
            "Witness":[{"filename":"bad_inout_lvalue9.php","line":6,"char_start":11,"char_end":23}]
          }
        ],
        "super":[
          {
            "Def":[
              {"filename":"hackarray.hhi","line":52,"char_start":24,"char_end":26},
              [
                {
                  "Hint":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":18,"char_end":28}]
                }
              ]
            ]
          }
        ]
      }
    }
  ]
}

File "", line 0, character 0 - line 0, character -1:


Reason:
{
  "Subtype":{
    "sub":[
      {
        "Prj_both":{
          "sub_prj":[
            {
              "Witness":[{"filename":"bad_inout_lvalue9.php","line":6,"char_start":11,"char_end":23}]
            }
          ],
          "prj":{"Prj_symm_fn_param":[0,0]},
          "sub":[
            {
              "Support_dynamic_type":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":10,"char_end":10}]
            }
          ],
          "super":[
            {
              "Witness":[{"filename":"bad_inout_lvalue9.php","line":6,"char_start":3,"char_end":24}]
            }
          ]
        }
      }
    ],
    "super":[
      {
        "Def":[
          {"filename":"hackarray.hhi","line":52,"char_start":24,"char_end":26},
          [
            {
              "Hint":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":18,"char_end":28}]
            }
          ]
        ]
      }
    ]
  }
}

File "", line 0, character 0 - line 0, character -1:


error: Typing[4110] Invalid argument to an `inout` parameter

File "bad_inout_lvalue9.php", line 6, character 11 - line 6, character 23:

 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

Expected `(int, int)`

File "bad_inout_lvalue9.php", line 6, character 11 - line 6, character 23:

 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

But got `vec<int>`

File "bad_inout_lvalue9.php", line 3, character 18 - line 3, character 28:

 3 | function f(inout »varray<int>« $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout tuple($x, $y));
 7 | }

Derivation:
{
  "Derivation":[
    {
      "Begin":{
        "sub":[
          {
            "Pessimised_inout":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":30,"char_end":31}]
          }
        ],
        "super":[
          {
            "Flow":{
              "from":[
                {
                  "Pessimised_inout":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":30,"char_end":31}]
                }
              ],
              "kind":"Flow_assign",
              "into":[
                {
                  "Witness":[{"filename":"bad_inout_lvalue9.php","line":6,"char_start":11,"char_end":23}]
                }
              ]
            }
          }
        ]
      }
    },
    {
      "Step":{
        "rule":{"Using_prj_sub":"Prj_asymm_union"},
        "on_":"Subtype",
        "sub":[
          {
            "Def":[
              {"filename":"hackarray.hhi","line":52,"char_start":24,"char_end":26},
              [
                {
                  "Hint":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":18,"char_end":28}]
                }
              ]
            ]
          }
        ],
        "super":[
          {
            "Flow":{
              "from":[
                {
                  "Pessimised_inout":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":30,"char_end":31}]
                }
              ],
              "kind":"Flow_assign",
              "into":[
                {
                  "Witness":[{"filename":"bad_inout_lvalue9.php","line":6,"char_start":11,"char_end":23}]
                }
              ]
            }
          }
        ]
      }
    }
  ]
}

File "", line 0, character 0 - line 0, character -1:


Reason:
{
  "Subtype":{
    "sub":[
      {
        "Prj_one":{
          "part":[
            {
              "Def":[
                {"filename":"hackarray.hhi","line":52,"char_start":24,"char_end":26},
                [
                  {
                    "Hint":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":18,"char_end":28}]
                  }
                ]
              ]
            }
          ],
          "prj":"Prj_asymm_union",
          "whole":[
            {
              "Pessimised_inout":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":30,"char_end":31}]
            }
          ]
        }
      }
    ],
    "super":[
      {
        "Flow":{
          "from":[
            {
              "Pessimised_inout":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":30,"char_end":31}]
            }
          ],
          "kind":"Flow_assign",
          "into":[
            {
              "Witness":[{"filename":"bad_inout_lvalue9.php","line":6,"char_start":11,"char_end":23}]
            }
          ]
        }
      }
    ]
  }
}

File "", line 0, character 0 - line 0, character -1:


error: Typing[4110] Invalid argument to an `inout` parameter

File "bad_inout_lvalue9.php", line 6, character 11 - line 6, character 23:

 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

Expected `(int, int)`

File "bad_inout_lvalue9.php", line 6, character 11 - line 6, character 23:

 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

But got `dynamic` because the type of this inout parameter is implicitly a like-type

File "bad_inout_lvalue9.php", line 3, character 30 - line 3, character 31:

 3 | function f(inout varray<int> »$a«): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout tuple($x, $y));
 7 | }

Derivation:
{
  "Derivation":[
    {
      "Begin":{
        "sub":[
          {
            "Pessimised_inout":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":30,"char_end":31}]
          }
        ],
        "super":[
          {
            "Flow":{
              "from":[
                {
                  "Pessimised_inout":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":30,"char_end":31}]
                }
              ],
              "kind":"Flow_assign",
              "into":[
                {
                  "Witness":[{"filename":"bad_inout_lvalue9.php","line":6,"char_start":11,"char_end":23}]
                }
              ]
            }
          }
        ]
      }
    },
    {
      "Step":{
        "rule":{"Using_prj_sub":"Prj_asymm_union"},
        "on_":"Subtype",
        "sub":[
          {
            "Pessimised_inout":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":30,"char_end":31}]
          }
        ],
        "super":[
          {
            "Flow":{
              "from":[
                {
                  "Pessimised_inout":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":30,"char_end":31}]
                }
              ],
              "kind":"Flow_assign",
              "into":[
                {
                  "Witness":[{"filename":"bad_inout_lvalue9.php","line":6,"char_start":11,"char_end":23}]
                }
              ]
            }
          }
        ]
      }
    }
  ]
}

File "", line 0, character 0 - line 0, character -1:


Reason:
{
  "Subtype":{
    "sub":[
      {
        "Prj_one":{
          "part":[
            {
              "Pessimised_inout":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":30,"char_end":31}]
            }
          ],
          "prj":"Prj_asymm_union",
          "whole":[
            {
              "Pessimised_inout":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":30,"char_end":31}]
            }
          ]
        }
      }
    ],
    "super":[
      {
        "Flow":{
          "from":[
            {
              "Pessimised_inout":[{"filename":"bad_inout_lvalue9.php","line":3,"char_start":30,"char_end":31}]
            }
          ],
          "kind":"Flow_assign",
          "into":[
            {
              "Witness":[{"filename":"bad_inout_lvalue9.php","line":6,"char_start":11,"char_end":23}]
            }
          ]
        }
      }
    ]
  }
}

File "", line 0, character 0 - line 0, character -1:


4 errors found
