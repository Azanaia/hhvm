error: Parsing[1002] You cannot decorate this argument as inout

File bad_inout_lvalue9.php, line 6, character 11 - line 6, character 23:

 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

error: Typing[4110] Invalid argument

File bad_inout_lvalue9.php, line 6, character 5 - line 6, character 23:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(»inout tuple($x, $y)«);
 7 | }

Expected vec<int>

File bad_inout_lvalue9.php, line 3, character 18 - line 3, character 28:

 1 | <?hh
 2 | 
 3 | function f(inout »varray<int>« $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout tuple($x, $y));
 7 | }

But got (int, int)

File bad_inout_lvalue9.php, line 6, character 11 - line 6, character 23:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

Here's why:


  Step 1 of 2                                                                   

I started by checking this subtype relationship.

The subtype comes from this function or method declaration

File bad_inout_lvalue9.php, line 3, character 10 - line 3, character 10:

 1 | <?hh
 2 | 
 3 | function »f«(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout tuple($x, $y));
 7 | }

The supertype comes from this expression

File bad_inout_lvalue9.php, line 6, character 3 - line 6, character 24:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   »f(inout tuple($x, $y))«;
 7 | }


  Step 2 of 2                                 (here is where the error occurred) 

These are function types so next I checked the 1st function parameters.
Functions are contravariant in their parameters so the direction of the subtype relationship is reversed.

The subtype comes from this expression

File bad_inout_lvalue9.php, line 6, character 11 - line 6, character 23:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

The supertype comes from this hint

File bad_inout_lvalue9.php, line 3, character 18 - line 3, character 28:

 1 | <?hh
 2 | 
 3 | function f(inout »varray<int>« $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout tuple($x, $y));
 7 | }

which is defined here

File hackarray.hhi, line 52, character 24 - line 52, character 26:

 50 |    */
 51 |   <<__SupportDynamicType>>
 52 |   abstract final class »vec«<<<__NoAutoBound>> +T> extends AnyArray<int, T> {}
 53 | 
 54 | } // namespace HH

error: Typing[4110] Invalid argument to an inout parameter

File bad_inout_lvalue9.php, line 6, character 11 - line 6, character 23:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

Expected (nothing, nothing) resulting from a list destructuring assignment or a splat

File bad_inout_lvalue9.php, line 6, character 11 - line 6, character 23:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

But got vec<int>

File bad_inout_lvalue9.php, line 3, character 18 - line 3, character 28:

 1 | <?hh
 2 | 
 3 | function f(inout »varray<int>« $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout tuple($x, $y));
 7 | }

Here's why:


  Step 1 of 2                                                                   

I started by checking this subtype relationship.

The subtype comes from this inout parameter

File bad_inout_lvalue9.php, line 3, character 30 - line 3, character 31:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> »$a«): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout tuple($x, $y));
 7 | }

The supertype comes from this destructure expression

File bad_inout_lvalue9.php, line 6, character 11 - line 6, character 23:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }


  Step 2 of 2                                 (here is where the error occurred) 

The subtype is a union type so next I checked the subtype constraint is satisfied for all its elements.

The subtype comes from this hint

File bad_inout_lvalue9.php, line 3, character 18 - line 3, character 28:

 1 | <?hh
 2 | 
 3 | function f(inout »varray<int>« $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout tuple($x, $y));
 7 | }

which is defined here

File hackarray.hhi, line 52, character 24 - line 52, character 26:

 50 |    */
 51 |   <<__SupportDynamicType>>
 52 |   abstract final class »vec«<<<__NoAutoBound>> +T> extends AnyArray<int, T> {}
 53 | 
 54 | } // namespace HH

The supertype is the same as before.

File bad_inout_lvalue9.php, line 6, character 11 - line 6, character 23:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

error: Typing[4110] Invalid argument to an inout parameter

File bad_inout_lvalue9.php, line 6, character 11 - line 6, character 23:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

Expected (nothing, nothing) resulting from a list destructuring assignment or a splat

File bad_inout_lvalue9.php, line 6, character 11 - line 6, character 23:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

But got dynamic because the type of this inout parameter is implicitly a like-type

File bad_inout_lvalue9.php, line 3, character 30 - line 3, character 31:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> »$a«): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout tuple($x, $y));
 7 | }

Here's why:


  Step 1 of 2                                                                   

I started by checking this subtype relationship.

The subtype comes from this inout parameter

File bad_inout_lvalue9.php, line 3, character 30 - line 3, character 31:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> »$a«): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout tuple($x, $y));
 7 | }

The supertype comes from this destructure expression

File bad_inout_lvalue9.php, line 6, character 11 - line 6, character 23:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }


  Step 2 of 2                                 (here is where the error occurred) 

The subtype is a union type so next I checked the subtype constraint is satisfied for all its elements.

The subtype comes from this inout parameter

File bad_inout_lvalue9.php, line 3, character 30 - line 3, character 31:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> »$a«): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout tuple($x, $y));
 7 | }

The supertype is the same as before.

File bad_inout_lvalue9.php, line 6, character 11 - line 6, character 23:

 1 | <?hh
 2 | 
 3 | function f(inout varray<int> $a): void {}
 4 | 
 5 | function test(int $x, int $y): void {
 6 |   f(inout »tuple($x, $y)«);
 7 | }

4 errors found
