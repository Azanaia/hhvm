error: Typing[4110] Invalid argument

File "class_subtyping_contravariant.php", line 15, character 14 - line 15, character 15:

 12 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 13 | 
 14 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 15 |   takes_my_a(»$x«);
 16 | }

Expected `Sub`

File "class_subtyping_contravariant.php", line 14, character 40 - line 14, character 42:

 12 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 13 | 
 14 | function subtype_bad_contravariant(MyB<»Sub«, Super> $x): void {
 15 |   takes_my_a($x);
 16 | }

But got `Super`

File "class_subtyping_contravariant.php", line 12, character 30 - line 12, character 34:

 12 | function takes_my_a(MyA<Sub, »Super«, Super> $_): void {}
 13 | 
 14 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 15 |   takes_my_a($x);
 16 | }

Here's why:

Step 1 of 4

I started by checking this subtype relationship.

The subtype comes from this function or method declaration

File "class_subtyping_contravariant.php", line 12, character 10 - line 12, character 19:

 12 | function »takes_my_a«(MyA<Sub, Super, Super> $_): void {}
 13 | 
 14 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 15 |   takes_my_a($x);
 16 | }

The supertype comes from this expression

File "class_subtyping_contravariant.php", line 15, character 3 - line 15, character 16:

 12 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 13 | 
 14 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 15 |   »takes_my_a($x)«;
 16 | }

Step 2 of 4

These are function types so next I checked the 1st function parameters.
Functions are contravariant in their parameters so the direction of the subtype relationship is reversed.

The subtype comes from this hint

File "class_subtyping_contravariant.php", line 14, character 36 - line 14, character 50:

 12 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 13 | 
 14 | function subtype_bad_contravariant(»MyB<Sub, Super>« $x): void {
 15 |   takes_my_a($x);
 16 | }

which is defined here

File "class_subtyping_contravariant.php", line 5, character 7 - line 5, character 9:

 3 | class MyA<+Tco, -Tcontra, Tinv> {}
 4 | 
 5 | class »MyB«<-T1, T2> extends MyA<Sub, T1, T2> {}
 6 | 
 7 | class Super {}

and flows into this expression as the parameter hint

File "class_subtyping_contravariant.php", line 14, character 52 - line 14, character 53:

 12 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 13 | 
 14 | function subtype_bad_contravariant(MyB<Sub, Super> »$x«): void {
 15 |   takes_my_a($x);
 16 | }

which itself flows into this expression as the type of the local variable

File "class_subtyping_contravariant.php", line 15, character 14 - line 15, character 15:

 12 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 13 | 
 14 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 15 |   takes_my_a(»$x«);
 16 | }

The supertype comes from this hint

File "class_subtyping_contravariant.php", line 12, character 21 - line 12, character 42:

 12 | function takes_my_a(»MyA<Sub, Super, Super>« $_): void {}
 13 | 
 14 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 15 |   takes_my_a($x);
 16 | }

which is defined here

File "class_subtyping_contravariant.php", line 3, character 7 - line 3, character 9:

 3 | class »MyA«<+Tco, -Tcontra, Tinv> {}
 4 | 
 5 | class MyB<-T1, T2> extends MyA<Sub, T1, T2> {}
 6 | 
 7 | class Super {}

Step 3 of 4

The subtype extends a class or implements an interface so next I checked that was a subtype of the supertype.

The subtype comes from this hint

File "class_subtyping_contravariant.php", line 5, character 28 - line 5, character 43:

 3 | class MyA<+Tco, -Tcontra, Tinv> {}
 4 | 
 5 | class MyB<-T1, T2> extends »MyA<Sub, T1, T2>« {}
 6 | 
 7 | class Super {}

which is defined here

File "class_subtyping_contravariant.php", line 3, character 7 - line 3, character 9:

 3 | class »MyA«<+Tco, -Tcontra, Tinv> {}
 4 | 
 5 | class MyB<-T1, T2> extends MyA<Sub, T1, T2> {}
 6 | 
 7 | class Super {}

The supertype is the same as before.

File "class_subtyping_contravariant.php", line 12, character 21 - line 12, character 42:

 12 | function takes_my_a(»MyA<Sub, Super, Super>« $_): void {}
 13 | 
 14 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 15 |   takes_my_a($x);
 16 | }

Step 4 of 4 (here is where the error occurred)

`\MyA` is a class or interface so next I checked the 2nd type arguments.
The type parameter is contravariant so the direction of the subtype relationship is reversed.

The subtype comes from this hint

File "class_subtyping_contravariant.php", line 12, character 30 - line 12, character 34:

 12 | function takes_my_a(MyA<Sub, »Super«, Super> $_): void {}
 13 | 
 14 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 15 |   takes_my_a($x);
 16 | }

which is defined here

File "class_subtyping_contravariant.php", line 7, character 7 - line 7, character 11:

 7 | class »Super« {}
 8 | 
 9 | 
10 | class Sub extends Super {}
11 | 
12 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}

The supertype comes from this hint

File "class_subtyping_contravariant.php", line 14, character 40 - line 14, character 42:

 12 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 13 | 
 14 | function subtype_bad_contravariant(MyB<»Sub«, Super> $x): void {
 15 |   takes_my_a($x);
 16 | }

which is defined here

File "class_subtyping_contravariant.php", line 10, character 7 - line 10, character 9:

 7 | class Super {}
 8 | 
 9 | 
10 | class »Sub« extends Super {}
11 | 
12 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}

1 error found
