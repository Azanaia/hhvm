error: NastCheck[3030] Lacking `__construct`, class `Test` does not initialize its private member(s): `c1`

File "workplace_non_exact.php", line 8, character 16 - line 8, character 19:

 8 | abstract class »Test« {
 9 |   private C1 $c1;

error: Typing[4110] Invalid argument

File "workplace_non_exact.php", line 12, character 18 - line 12, character 26:

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     $this->c1->f(»$this->c1«);
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

Expected `<expr#3> as C1`

File "workplace_non_exact.php", line 4, character 21 - line 4, character 24:

 3 | abstract class C1 {
 4 |   public function f(»this« $_): void {
 5 |   }
 6 | }

  where `<expr#3>` is a reference to this expression

File "workplace_non_exact.php", line 12, character 5 - line 12, character 13:

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     »$this->c1«->f($this->c1);
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

But got `C1`

File "workplace_non_exact.php", line 9, character 11 - line 9, character 12:

 8 | abstract class Test {
 9 |   private »C1« $c1;
10 | 
11 |   public function fInstance(): void {
12 |     $this->c1->f($this->c1);
13 |     $c1 = $this->c1;
14 |     $c1->f($c1);

Derivation:
{
  "Derivation":[
    {
      "Begin":{
        "sub":[
          {
            "Support_dynamic_type":[{"filename":"workplace_non_exact.php","line":4,"char_start":19,"char_end":19}]
          }
        ],
        "super":[
          {
            "Witness":[{"filename":"workplace_non_exact.php","line":12,"char_start":5,"char_end":27}]
          }
        ]
      }
    },
    {
      "Step":{
        "rule":{"Using_prj":{"Prj_symm_fn_param":[0,0]}},
        "on_":"Both",
        "sub":[
          {
            "Flow":{
              "from":[
                {
                  "Solved":{
                    "solution":[
                      {
                        "Def":[
                          {"filename":"workplace_non_exact.php","line":3,"char_start":16,"char_end":17},
                          [
                            {
                              "Hint":[{"filename":"workplace_non_exact.php","line":9,"char_start":11,"char_end":12}]
                            }
                          ]
                        ]
                      }
                    ],
                    "of_":"1",
                    "in_":[
                      {
                        "Type_variable":[
                          {"filename":"workplace_non_exact.php","line":12,"char_start":18,"char_end":26},
                          "1"
                        ]
                      }
                    ]
                  }
                }
              ],
              "kind":"Flow_prop_access",
              "into":[
                {
                  "Witness":[
                    {"filename":"workplace_non_exact.php","line":12,"char_start":18,"char_end":26}
                  ]
                }
              ]
            }
          }
        ],
        "super":[
          {
            "Expr_dep_type":[
              [
                {
                  "Hint":[{"filename":"workplace_non_exact.php","line":4,"char_start":21,"char_end":24}]
                }
              ],
              {"filename":"workplace_non_exact.php","line":12,"char_start":5,"char_end":13},
              {"ERexpr":["3"]}
            ]
          }
        ]
      }
    }
  ]
}

File "", line 0, character 0 - line 0, character -1:


Reason:
{
  "Subtype":{
    "sub":[
      {
        "Solved":{
          "solution":[
            {
              "Lower_bound":{
                "bound":[
                  {
                    "Def":[
                      {"filename":"workplace_non_exact.php","line":3,"char_start":16,"char_end":17},
                      [
                        {
                          "Hint":[{"filename":"workplace_non_exact.php","line":9,"char_start":11,"char_end":12}]
                        }
                      ]
                    ]
                  }
                ],
                "of":[
                  {
                    "Type_variable":[
                      {"filename":"workplace_non_exact.php","line":12,"char_start":18,"char_end":26},
                      "1"
                    ]
                  }
                ]
              }
            }
          ],
          "of_":"1",
          "in_":[
            {
              "Prj_both":{
                "sub_prj":[
                  {
                    "Flow":{
                      "from":[
                        {
                          "Type_variable":[
                            {"filename":"workplace_non_exact.php","line":12,"char_start":18,"char_end":26},
                            "1"
                          ]
                        }
                      ],
                      "kind":"Flow_prop_access",
                      "into":[
                        {
                          "Witness":[
                            {"filename":"workplace_non_exact.php","line":12,"char_start":18,"char_end":26}
                          ]
                        }
                      ]
                    }
                  }
                ],
                "prj":{"Prj_symm_fn_param":[0,0]},
                "sub":[
                  {
                    "Support_dynamic_type":[{"filename":"workplace_non_exact.php","line":4,"char_start":19,"char_end":19}]
                  }
                ],
                "super":[
                  {
                    "Witness":[{"filename":"workplace_non_exact.php","line":12,"char_start":5,"char_end":27}]
                  }
                ]
              }
            }
          ]
        }
      }
    ],
    "super":[
      {
        "Expr_dep_type":[
          [
            {
              "Hint":[{"filename":"workplace_non_exact.php","line":4,"char_start":21,"char_end":24}]
            }
          ],
          {"filename":"workplace_non_exact.php","line":12,"char_start":5,"char_end":13},
          {"ERexpr":["3"]}
        ]
      }
    ]
  }
}

File "", line 0, character 0 - line 0, character -1:


Since `C1` is not final

File "workplace_non_exact.php", line 9, character 11 - line 9, character 12:

 8 | abstract class Test {
 9 |   private »C1« $c1;
10 | 
11 |   public function fInstance(): void {
12 |     $this->c1->f($this->c1);
13 |     $c1 = $this->c1;
14 |     $c1->f($c1);

this might not be a `C1`

File "workplace_non_exact.php", line 9, character 11 - line 9, character 12:

 8 | abstract class Test {
 9 |   private »C1« $c1;
10 | 
11 |   public function fInstance(): void {
12 |     $this->c1->f($this->c1);
13 |     $c1 = $this->c1;
14 |     $c1->f($c1);

2 errors found.
