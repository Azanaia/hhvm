error: Typing[4110] Invalid argument

File "metachain.php", line 17, character 19 - line 17, character 50:

 16 |   $chain = chain($s);
 17 |   $chain->thenMPZ(»ReproIGCreatorAIMetachain::class«);
 18 | }

Expected `string`

File "metachain.php", line 22, character 17 - line 22, character 22:

 21 |   const type TInput = shape(
 22 |     'prompt' => »string«,
 23 |   );
 24 | }

But got `dynamic`

File "metachain.php", line 7, character 10 - line 10, character 3:

 6 | ): Awaitable<void> {
 7 |   $foo = »await genX(
 8 |     // ReproMetaChain::fromValue(shape()) instead of $val
 9 |     $val->then($obj),
10 |   );«
11 |   list($_, $user_prompt) = $foo;
12 |   //$user_prompt = $foo[1];

Here's why:

I checked the subtype constraint in [Main] because it was implied by the other constraints on the type variable.

Main

[Main] Step 1 of 2

I started by checking this subtype relationship.

The subtype comes from this expression

File "metachain.php", line 7, character 10 - line 10, character 3:

 6 | ): Awaitable<void> {
 7 |   $foo = »await genX(
 8 |     // ReproMetaChain::fromValue(shape()) instead of $val
 9 |     $val->then($obj),
10 |   );«
11 |   list($_, $user_prompt) = $foo;
12 |   //$user_prompt = $foo[1];

which I solved to this expression

File "metachain.php", line 7, character 10 - line 10, character 3:

 6 | ): Awaitable<void> {
 7 |   $foo = »await genX(
 8 |     // ReproMetaChain::fromValue(shape()) instead of $val
 9 |     $val->then($obj),
10 |   );«
11 |   list($_, $user_prompt) = $foo;
12 |   //$user_prompt = $foo[1];

and flows into this expression via an assignment

File "metachain.php", line 11, character 28 - line 11, character 31:

 10 |   );
 11 |   list($_, $user_prompt) = »$foo«;
 12 |   //$user_prompt = $foo[1];
 13 |   $s = shape(

The supertype comes from this hint

File "metachain.php", line 22, character 17 - line 22, character 22:

 21 |   const type TInput = shape(
 22 |     'prompt' => »string«,
 23 |   );
 24 | }

[Main] Step 2 of 2 (here is where the error occurred)

The subtype is a union type so next I checked the subtype constraint is satisfied for all its elements.

The subtype comes from this expression

File "metachain.php", line 7, character 10 - line 10, character 3:

 6 | ): Awaitable<void> {
 7 |   $foo = »await genX(
 8 |     // ReproMetaChain::fromValue(shape()) instead of $val
 9 |     $val->then($obj),
10 |   );«
11 |   list($_, $user_prompt) = $foo;
12 |   //$user_prompt = $foo[1];

The supertype is the same as before.

File "metachain.php", line 22, character 17 - line 22, character 22:

 21 |   const type TInput = shape(
 22 |     'prompt' => »string«,
 23 |   );
 24 | }

warning: Warn[12012] This `as` assertion will always fail and lead to an exception at runtime. The expression on the left has type `null` which shares no values with `nonnull`.

File "metachain.php", line 28, character 10 - line 28, character 24:

 27 | function chain<T>(T $_): ReproGenesisChain<T> {
 28 |   return »null as nonnull«;
 29 | }

warning: Warn[12012] This `as` assertion will always fail and lead to an exception at runtime. The expression on the left has type `null` which shares no values with `nonnull`.

File "metachain.php", line 36, character 12 - line 36, character 26:

 35 |   ): ReproGenesisChain<mixed> {
 36 |     return »null as nonnull«;
 37 |   }
 38 | }

warning: Warn[12012] This `as` assertion will always fail and lead to an exception at runtime. The expression on the left has type `null` which shares no values with `nonnull`.

File "metachain.php", line 50, character 12 - line 50, character 26:

 49 |   public static function fromValue(TOut $_): ReproMetaChain<TIn, TOut> {
 50 |     return »null as nonnull«;
 51 |   }
 52 |   public function then<TNextOut>(

warning: Warn[12012] This `as` assertion will always fail and lead to an exception at runtime. The expression on the left has type `null` which shares no values with `nonnull`.

File "metachain.php", line 55, character 12 - line 55, character 26:

 54 |   ): ReproMetaChain<TIn, TNextOut> {
 55 |     return »null as nonnull«;
 56 |   }
 57 | }

warning: Warn[12012] This `as` assertion will always fail and lead to an exception at runtime. The expression on the left has type `null` which shares no values with `nonnull`.

File "metachain.php", line 64, character 10 - line 64, character 24:

 63 | ): Awaitable<TOut> {
 64 |   return »null as nonnull«;
 65 | }

6 errors found
